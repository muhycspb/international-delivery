services:
#    app:
#        container_name: app_container
#        build:
#            context: .
#        restart: unless-stopped
#        ports:
#            - "8000:8000"
#        healthcheck:
#            test: ["CMD-SHELL", "curl -f http://localhost:8000 || exit 1"]
#            interval: 10s
#            timeout: 5s
#            retries: 5
#        depends_on:
#            - postgres
#            - redis
    postgres:
        container_name: postgres_container
        image: postgres
        restart: unless-stopped
        environment:
            POSTGRES_USER: postgres
            POSTGRES_PASSWORD: postgres
            POSTGRES_DB: postgres
            PGDATA: /var/lib/postgresql/data/pgdata
        volumes:
            - ./data:/var/lib/postgresql/data
        ports:
            - "5432:5432"
        healthcheck:
            test: ["CMD-SHELL", "pg_isready -U postgres"]
            interval: 10s
            timeout: 5s
            retries: 5
    redis:
        container_name: redis_container
        image: redis
        restart: unless-stopped
        ports:
            - "6379:6379"
        healthcheck:
            test: ["CMD-SHELL", "redis-cli ping"]
            interval: 10s
            timeout: 5s
            retries: 5
#    rabbitmq:
#        container_name: rabbitmq_container
#        image: rabbitmq:management-alpine
#        restart: unless-stopped
#        ports:
#          - "15672:15672"
#          - "5672:5672"
#        healthcheck:
#            test: ["CMD", "rabbitmq-diagnostics", "ping"]
#            interval: 10s
#            timeout: 5s
#            retries: 5